require 'prime'
def factors_of(number)
  primes, powers = number.prime_division.transpose
  exponents = powers.map{|i| (0..i).to_a}
  divisors = exponents.shift.product(*exponents).map do |powers|
    primes.zip(powers).map{|prime, power| prime ** power}.inject(:*)
  end
  divisors.sort.map{|div| [div, number / div]}
end

i = 2
begin
	trianglenumber = (1..i).to_a.inject(0) {|sum, i| sum + i}
	numfactor = factors_of(trianglenumber).count
	if numfactor % 100 == 0 then 
		puts "#{trianglenumber}		#{numfactor}"
	end	
	i += 1
end while numfactor <= 500

puts "#{trianglenumber}		#{numfactor}"

